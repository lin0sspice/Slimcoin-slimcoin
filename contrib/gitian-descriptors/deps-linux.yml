---
name: "bitcoin"
suites:
- "precise"
architectures:
- "i386"
- "amd64"
packages:
- "g++"
- "unzip"
- "zip"
- "pkg-config"
- "libtool"
- "faketime"
- "bsdmainutils"
reference_datetime: "2013-06-01 00:00:00"
remotes: []
files:
- "openssl-1.0.1l.tar.gz"
- "miniupnpc-1.9.tar.gz"
- "qrencode-3.4.3.tar.bz2"
- "protobuf-2.5.0.tar.bz2"
- "db-4.8.30.NC.tar.gz"
script: |
  STAGING="$HOME/install"
  TEMPDIR="$HOME/tmp"
  OPTFLAGS='-O2'
  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
  export FAKETIME=$REFERENCE_DATETIME
  export TZ=UTC
  export LIBRARY_PATH="$STAGING/lib"
  # Integrity Check
  #  echo "53cb818c3b90e507a8348f4f5eaedb05d8bfe5358aabb508b7263cc670c3e028  openssl-1.0.1g.tar.gz"  | sha256sum -c
  #  echo "bbd6b756e6af44b5a5b0f9b93eada3fb8922ed1d6451b7d6f184d0ae0c813994  miniupnpc-1.6.tar.gz"   | sha256sum -c
  #  echo "03c4bc7cd9a75747c3815d509bbe061907d615764f2357923f0db948c567068f  qrencode-3.2.0.tar.bz2" | sha256sum -c
  echo "13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2" | sha256sum -c
  echo "12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz"    | sha256sum -c

  #
  tar xzf openssl-1.0.1l.tar.gz
  cd openssl-1.0.1l
  #   need -fPIC to avoid relocation error in 64 bit builds
  ./config no-shared no-zlib no-dso no-krb5 --openssldir=$STAGING -fPIC
  #   need to build OpenSSL with faketime because a timestamp is embedded into cversion.o
  make
  make install_sw
  cd ..
  #
  tar xzfm miniupnpc-1.9.tar.gz
  cd miniupnpc-1.9
  #   miniupnpc is always built with -fPIC
  INSTALLPREFIX=$STAGING make $MAKEOPTS install
  rm -f $STAGING/lib/libminiupnpc.so* # no way to skip shared lib build
  cd ..
  #
  tar xjf qrencode-3.4.3.tar.bz2
  cd qrencode-3.4.3
  unset FAKETIME # unset fake time during configure, as it does some clock sanity tests
  #   need --with-pic to avoid relocation error in 64 bit builds
  ./configure --prefix=$STAGING --enable-static --disable-shared --with-pic --without-tools --disable-dependency-tracking
  # Workaround to prevent re-configuring by make; make all files have a date in the past
  find . -print0 | xargs -r0 touch -t 200001010000
  export FAKETIME=$REFERENCE_DATETIME
  make $MAKEOPTS install
  cd ..
  #
  tar xjf protobuf-2.5.0.tar.bz2
  cd protobuf-2.5.0
  mkdir -p $STAGING/host/bin
  unset FAKETIME # unset fake time during configure, as it does some clock sanity tests
  #   need --with-pic to avoid relocation error in 64 bit builds
  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared --with-pic --without-zlib
  # Workaround to prevent re-configuring by make; make all files have a date in the past
  find . -print0 | xargs -r0 touch -t 200001010000
  export FAKETIME=$REFERENCE_DATETIME
  make $MAKEOPTS install
  cd ..
  #
  tar xzf db-4.8.30.NC.tar.gz
  cd db-4.8.30.NC/build_unix
  #   need --with-pic to avoid relocation error in 64 bit builds
  ../dist/configure --prefix=$STAGING --enable-cxx --disable-shared --with-pic
  # Workaround to prevent re-configuring by make; make all files have a date in the past
  find . -print0 | xargs -r0 touch -t 200001010000
  make $MAKEOPTS library_build
  make install_lib install_include
  cd ../..
  # post-process all generated libraries to be deterministic
  # extract them to a temporary directory then re-build them deterministically
  for LIB in $(find $STAGING -name \*.a); do
    rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR
    ar xv $LIB | cut -b5- > /tmp/list.txt
    rm $LIB
    ar crsD $LIB $(cat /tmp/list.txt)
  done
  #
  cd $STAGING
  find include lib bin host | sort | zip -X@ $OUTDIR/slimcoin-deps-linux${GBUILD_BITS}-gitian-r5.zip
---
name: "bitcoin-deps"
suites:
- "precise"
architectures:
- "i386"
packages: 
- "mingw32"
- "git-core"
- "zip"
- "faketime"
- "wine"
- "psmisc"
reference_datetime: "2011-01-30 00:00:00"
remotes: []
files:
- "openssl-1.0.1l.tar.gz"
- "db-4.8.30.NC.tar.gz"
- "zlib-1.2.8.tar.gz"
- "libpng-1.6.8.tar.gz"
- "qrencode-3.4.3.tar.bz2"
script: |
  #
  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
  export FAKETIME=$REFERENCE_DATETIME
  export TZ=UTC
  #
  tar xzf openssl-1.0.1l.tar.gz
  cd openssl-1.0.1l
  ./Configure --cross-compile-prefix=i586-mingw32msvc- mingw
  make
  cd ..
  #
  tar xzf db-4.8.30.NC.tar.gz
  cd db-4.8.30.NC/build_unix
  ../dist/configure --enable-mingw --enable-cxx --host=i586-mingw32msvc CFLAGS="-I/usr/i586-mingw32msvc/include"
  make $MAKEOPTS
  cd ../..
  #
  ## Try building without UPNP support due to problems
  ## to use, add to 'files':
  ## - "miniupnpc-1.9.tar.gz"
  # tar xzf miniupnpc-1.9.tar.gz
  # cd miniupnpc-1.9
  # sed 's/dllwrap -k --driver-name gcc/$(DLLWRAP) -k --driver-name $(CC)/' -i Makefile.mingw
  # sed 's|wingenminiupnpcstrings $< $@|./wingenminiupnpcstrings $< $@|' -i Makefile.mingw
  # make -f Makefile.mingw DLLWRAP=i586-mingw32msvc-dllwrap CC=i586-mingw32msvc-gcc AR=i586-mingw32msvc-ar
  # cd ..
  # mv miniupnpc-1.6 miniupnpc
  #
  #
  tar xzf zlib-1.2.8.tar.gz
  cd zlib-1.2.8
  make -f win32/Makefile.gcc PREFIX=i586-mingw32msvc- $MAKEOPTS
  cd ..
  #
  tar xzf libpng-1.6.8.tar.gz
  cd libpng-1.6.8
  ## Change CFLAGS to CPPFLAGS to ensure '-I' applies to preprocess-only cmds
  # ./configure -disable-shared ...  CC=i586-mingw32msvc-cc LDFLAGS="-L../zlib-1.2.8/" CFLAGS="-I../zlib-1.2.8/"
  ./configure -disable-shared --host=i586-mingw32msvc LDFLAGS="-L../zlib-1.2.8/" CPPFLAGS="-I../zlib-1.2.8/"
  make $MAKEOPTS
  cd ..
  #
  tar xjf qrencode-3.4.3.tar.bz2
  cd qrencode-3.4.3
  # ./configure CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld png_LIBS="../libpng-1.6.8/.libs/libpng16.a ../zlib-1.2.8/libz.a" png_CFLAGS="-I../libpng-1.6.8"
  ./configure --host=i586-mingw32msvc CC=i586-mingw32msvc-cc png_LIBS="../libpng-1.6.8/.libs/libpng16.a ../zlib-1.2.8/libz.a" png_CFLAGS="-I../libpng-1.6.8"
  make $MAKEOPTS
  cd ..
  #
  find include lib bin host | sort | zip -X@ $OUTDIR/slimcoin-deps-linux${GBUILD_BITS}-gitian-r5.zip

  zip -r $OUTDIR/slimcoin-deps-win${GBUILT_BITS}-gitian-r1.zip \
    $(ls qrencode-*/{qrencode.h,.libs/libqrencode.{,l}a} | sort) \
    $(ls db-*/build_unix/{libdb_cxx.a,db.h,db_cxx.h,libdb.a,.libs/libdb_cxx-?.?.a} | sort) \
    $(find openssl-* -name '*.a' -o -name '*.h' | sort) \
    $(find miniupnpc -name '*.h' -o -name 'libminiupnpc.a' | sort)
  # Kill wine processes as gitian won't figure out we are done otherwise
  killall wineserver services.exe explorer.exe winedevice.exe
